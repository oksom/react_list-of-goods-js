{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","currentOrder","setCurrentOrder","isReversed","setIsReversed","sortField","setSortField","className","type","onClick","sortedGoods","sort","reverse","a","b","length","reversedGoods","map","good","id","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,GAAD,OAAKF,IAArD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA0CA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAkC,iBAAdF,EAA+B,GAAK,YACjEI,QA9CyB,WAC/B,IAAIC,EAAc,YAAIT,GAAcU,OAEhCR,IACFO,EAAcA,EAAYE,UAC1BR,GAAc,IAGhBF,EAAgBQ,GAChBJ,EAAa,iBAkCT,iCAQA,wBACEE,KAAK,SACLD,UAAS,4BAAqC,WAAdF,EAAyB,GAAK,YAC9DI,QA1CmB,WACzB,IAAIC,EAAc,YAAIT,GAAcU,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAE5DZ,IACFO,EAAcA,EAAYE,UAC1BR,GAAc,IAGhBF,EAAgBQ,GAChBJ,EAAa,WA8BT,4BAQA,wBACEE,KAAK,SACLD,UAAS,4BAAqC,YAAdF,EAA0B,GAAK,YAC/DI,QAtCc,WACpB,IAAMO,EAAgB,YAAIf,GAAcW,UAExCV,EAAgBc,GAChBZ,GAAeD,GACfG,EAAa,YA8BT,SAKGH,EAAa,UAAY,iBAGb,KAAdE,GACC,wBACEG,KAAK,SACLD,UAAU,mBACVE,QAvCU,WACA,iBAAdJ,GAA8C,WAAdA,IAClCH,EAAgB,GAAD,OAAKJ,IACpBM,GAAc,GACdE,EAAa,MAgCT,sBAUJ,6BACGL,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAkB,UAAQ,OAA1B,SACGA,GADMA,EAAKC,aCnGxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.08f091eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [currentOrder, setCurrentOrder] = useState([...goodsFromServer]);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortField, setSortField] = useState('');\n\n  const handleSortAlphabetically = () => {\n    let sortedGoods = [...currentOrder].sort();\n\n    if (isReversed) {\n      sortedGoods = sortedGoods.reverse();\n      setIsReversed(false);\n    }\n\n    setCurrentOrder(sortedGoods);\n    setSortField('alphabetical');\n  };\n\n  const handleSortByLength = () => {\n    let sortedGoods = [...currentOrder].sort((a, b) => a.length - b.length);\n\n    if (isReversed) {\n      sortedGoods = sortedGoods.reverse();\n      setIsReversed(false);\n    }\n\n    setCurrentOrder(sortedGoods);\n    setSortField('length');\n  };\n\n  const handleReverse = () => {\n    const reversedGoods = [...currentOrder].reverse();\n\n    setCurrentOrder(reversedGoods);\n    setIsReversed(!isReversed);\n    setSortField('reverse');\n  };\n\n  const handleReset = () => {\n    if (sortField === 'alphabetical' || sortField === 'length') {\n      setCurrentOrder([...goodsFromServer]);\n      setIsReversed(false);\n      setSortField('');\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField === 'alphabetical' ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField === 'length' ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${sortField === 'reverse' ? '' : 'is-light'}`}\n          onClick={handleReverse}\n        >\n          {isReversed ? 'Reverse' : 'Undo Reverse'}\n        </button>\n\n        {sortField !== '' && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {currentOrder.map(good => (\n          <li key={good.id} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}